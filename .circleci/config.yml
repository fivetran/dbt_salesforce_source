version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.7.9-stretch

    steps:
      - checkout

      - run:
          run: setup_creds
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - restore_cache:
          key: deps2-{{ .Branch }}

      - run:
          name: "Setup dbt"
          command: |
            sudo apt install libsasl2-dev
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools
            pip install -r integration_tests/requirements.txt
            mkdir -p ~/.dbt
            cp integration_tests/ci/sample.profiles.yml ~/.dbt/profiles.yml

      - run:
          name: "Run Tests - Spark"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target spark --full-refresh
            dbt run --vars '{using_account_history_mode_active_records: true, using_opportunity_history_mode_active_records: true, using_user_role_history_mode_active_records: true, using_user_history_mode_active_records: true, salesforce__user_role_enabled: false}' --target spark --full-refresh
            dbt test --vars '{salesforce__user_role_enabled: false}' --target spark
            dbt run --target spark --full-refresh
            dbt test --target spark
            
      - run:
          name: "Run Tests - Snowflake"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target snowflake --full-refresh
            dbt run --vars '{using_account_history_mode_active_records: true, using_opportunity_history_mode_active_records: true, using_user_role_history_mode_active_records: true, using_user_history_mode_active_records: true, salesforce__user_role_enabled: false}' --target snowflake --full-refresh
            dbt test --vars '{salesforce__user_role_enabled: false}' --target snowflake
            dbt run --target snowflake --full-refresh
            dbt test --target snowflake

      - run:
          name: "Run Tests - BigQuery"
          environment:
              GCLOUD_SERVICE_KEY_PATH: "/home/circleci/gcloud-service-key.json"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target bigquery --full-refresh
            dbt run --vars '{using_account_history_mode_active_records: true, using_opportunity_history_mode_active_records: true, using_user_role_history_mode_active_records: true, using_user_history_mode_active_records: true, salesforce__user_role_enabled: false}' --target bigquery --full-refresh
            dbt test --vars '{salesforce__user_role_enabled: false}' --target bigquery
            dbt run --target bigquery --full-refresh
            dbt test --target bigquery
      - save_cache:
          key: deps2-{{ .Branch }}
          paths:
            - "venv"

      - run:
          name: "Run Tests - Postgres"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target postgres --full-refresh
            dbt run --vars '{using_account_history_mode_active_records: true, using_opportunity_history_mode_active_records: true, using_user_role_history_mode_active_records: true, using_user_history_mode_active_records: true, salesforce__user_role_enabled: false}' --target postgres --full-refresh
            dbt test --vars '{salesforce__user_role_enabled: false}' --target postgres
            dbt run --target postgres --full-refresh
            dbt test --target postgres
      
      - run:
          name: "Run Tests - Redshift"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target redshift --full-refresh
            dbt run --vars '{using_account_history_mode_active_records: true, using_opportunity_history_mode_active_records: true, using_user_role_history_mode_active_records: true, using_user_history_mode_active_records: true, salesforce__user_role_enabled: false}' --target redshift --full-refresh
            dbt test --vars '{salesforce__user_role_enabled: false}' --target redshift
            dbt run --target redshift --full-refresh
            dbt test --target redshift